    __ This small program allows you to automatically create a Norminette-compliant Makefile. 
    __ Compilation occurs with gcc and the -Wall -Wextra -Werror flags. 
    __ I use separate files for your sources and the help file.


[?] Create "make scratch" to start a new project
[?] Create "make order" or "make sweep" to clean an existing repository and rearrange files in correct directories.
    [-] Put it in a Makefile.init or give the option in the shell program (which engage next bullet point)


[?] Create a "make UI" for User Interface (with NCurse or TermCaps)
[?] Create a "make CLI" for Command Line interface

    [!] The user should be able to choose if (s)he wants to interact with the script via an interface or the shell terminal.
    Such use should be explained distinctively within the help files and commands.
    [!] This is the lowest priority on the project.

[?] Define a non-complex help system.
    a[-] display abstract upon installation
    b[-] explain properly the different rules given
    b[-] explain the no-relink property
    b[-] explain the .PHONY property
    c[-] describe the directories
    c[-] describe the make help ressource and how it differs from the actual help of the script creating the Makefile.
        [*] Make help describes the re, clean, fclean, all rules.
            [y] Given time, add a function to automatically update make help when the user adds a new feature
    d[-] explain the choice on the arborescence for the directories
    e[-] create project's wiki on github

[?] Automatically fetch the different file names to insert into Makefile.sources

[?] Create the "make bonus" command + explain its worth.
